---
# Install custom packages on bastion host
# This workload runs tasks delegated to bastion

- name: Gather facts from bastion
  delegate_to: bastion
  ansible.builtin.setup:

- name: Debug - Show bastion connection info
  ansible.builtin.debug:
    msg:
      - "Connected to bastion: {{ hostvars['bastion']['ansible_hostname'] | default('unknown') }}"
      - "FQDN: {{ hostvars['bastion']['ansible_fqdn'] | default('unknown') }}"
      - "User: {{ hostvars['bastion']['ansible_user_id'] | default('unknown') }}"
      - "Home dir: {{ hostvars['bastion']['ansible_env']['HOME'] | default('unknown') }}"

- name: Debug - Run direct command on bastion to verify connection
  delegate_to: bastion
  become: false
  ansible.builtin.raw: "echo HOME=$HOME USER=$USER && /usr/bin/python3 -c 'import os; print(f\"Python HOME: {os.environ.get(\"HOME\")}\")'"
  register: _bastion_env_check
  changed_when: false

- name: Debug - Show raw command output
  ansible.builtin.debug:
    msg: "{{ _bastion_env_check.stdout_lines }}"

- name: Install dnf packages on bastion
  delegate_to: bastion
  when: bastion_custom_packages | default([]) | length > 0
  become: true
  ansible.builtin.dnf:
    name: "{{ bastion_custom_packages }}"
    state: present
  retries: 3
  delay: 10

- name: Debug - Verify dnf packages installed
  delegate_to: bastion
  when: bastion_custom_packages | default([]) | length > 0
  become: false
  ansible.builtin.shell: "/usr/bin/rpm -q {{ item }} || echo 'NOT INSTALLED'"
  loop: "{{ bastion_custom_packages }}"
  register: _verify_dnf
  changed_when: false
  failed_when: false

- name: Debug - Show dnf package verification
  when: bastion_custom_packages | default([]) | length > 0
  ansible.builtin.debug:
    msg: "{{ item.item }}: {{ item.stdout }}"
  loop: "{{ _verify_dnf.results }}"

- name: Install AWS CLI v2 on bastion (if awscli in pip packages list)
  delegate_to: bastion
  when:
    - bastion_pip_packages | default([]) | length > 0
    - "'awscli' in bastion_pip_packages"
  become: true
  block:
    - name: Download AWS CLI v2 bundle
      ansible.builtin.get_url:
        url: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
        dest: /tmp/awscliv2.zip
        mode: '0644'

    - name: Unzip AWS CLI v2 bundle
      ansible.builtin.unarchive:
        src: /tmp/awscliv2.zip
        dest: /tmp/
        remote_src: true

    - name: Install AWS CLI v2
      ansible.builtin.command: /tmp/aws/install -i /usr/local/aws-cli -b /usr/local/bin
      args:
        creates: /usr/local/bin/aws

    - name: Clean up AWS CLI installer files
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /tmp/awscliv2.zip
        - /tmp/aws

- name: Install other pip packages on bastion (user installation)
  delegate_to: bastion
  when:
    - bastion_pip_packages | default([]) | length > 0
    - item != 'awscli'
  become: false
  ansible.builtin.shell: "/usr/bin/pip3 install --user {{ item }}"
  loop: "{{ bastion_pip_packages }}"
  register: _pip_install_result
  changed_when: "'Successfully installed' in _pip_install_result.stdout"
  retries: 3
  delay: 10

- name: Debug - Check pip packages installed
  delegate_to: bastion
  when: bastion_pip_packages | default([]) | length > 0
  become: false
  ansible.builtin.shell: "/usr/bin/pip3 list 2>/dev/null | /usr/bin/grep -i {{ item }} || echo 'NOT FOUND'"
  loop: "{{ bastion_pip_packages }}"
  register: _verify_pip
  changed_when: false
  failed_when: false

- name: Debug - Show pip package verification
  when: bastion_pip_packages | default([]) | length > 0
  ansible.builtin.debug:
    msg: "{{ item.item }}: {{ item.stdout }}"
  loop: "{{ _verify_pip.results }}"

- name: Debug - Find where pip installed packages
  delegate_to: bastion
  when: bastion_pip_packages | default([]) | length > 0
  become: false
  ansible.builtin.shell: "/usr/bin/pip3 show {{ bastion_pip_packages[0] }} | /usr/bin/grep Location"
  register: _pip_location
  changed_when: false
  failed_when: false

- name: Debug - Check where executables were installed
  delegate_to: bastion
  when: bastion_pip_packages | default([]) | length > 0
  become: false
  ansible.builtin.shell: "/usr/bin/find /usr/local /home -name aws -type f 2>/dev/null | /usr/bin/head -5"
  register: _aws_location
  changed_when: false
  failed_when: false

- name: Debug - Show pip installation location
  when: bastion_pip_packages | default([]) | length > 0
  ansible.builtin.debug:
    msg:
      - "Pip packages location: {{ _pip_location.stdout | default('Not found') }}"
      - "AWS CLI executable locations: {{ _aws_location.stdout_lines | default(['Not found']) }}"
      - "Current user on bastion: {{ hostvars['bastion']['ansible_user_id'] | default('unknown') }}"
      - "To use AWS CLI, you may need to add the installation directory to your PATH"

- name: Run custom commands on bastion
  delegate_to: bastion
  when: bastion_custom_commands | default([]) | length > 0
  become: true
  ansible.builtin.command:
    cmd: "{{ item }}"
  loop: "{{ bastion_custom_commands }}"
  register: _bastion_command_result
  changed_when: _bastion_command_result.rc == 0
