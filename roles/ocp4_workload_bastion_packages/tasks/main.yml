---
# Install custom packages on bastion host
# This workload runs tasks delegated to bastion

- name: Debug - Check what host we're running on
  delegate_to: bastion
  become: false
  ansible.builtin.command: hostname
  register: _bastion_hostname
  changed_when: false

- name: Debug - Show hostname
  ansible.builtin.debug:
    msg: "Running on host: {{ _bastion_hostname.stdout }}"

- name: Debug - Check current user
  delegate_to: bastion
  become: false
  ansible.builtin.command: whoami
  register: _bastion_user
  changed_when: false

- name: Debug - Show current user
  ansible.builtin.debug:
    msg: "Running as user: {{ _bastion_user.stdout }}"

- name: Install dnf packages on bastion
  delegate_to: bastion
  when: bastion_custom_packages | default([]) | length > 0
  become: true
  ansible.builtin.dnf:
    name: "{{ bastion_custom_packages }}"
    state: present
  retries: 3
  delay: 10

- name: Debug - Verify dnf packages installed
  delegate_to: bastion
  when: bastion_custom_packages | default([]) | length > 0
  become: false
  ansible.builtin.command: "rpm -q {{ item }}"
  loop: "{{ bastion_custom_packages }}"
  register: _verify_dnf
  changed_when: false
  failed_when: false

- name: Debug - Show dnf package verification
  when: bastion_custom_packages | default([]) | length > 0
  ansible.builtin.debug:
    msg: "{{ item.item }}: {{ item.stdout if item.rc == 0 else 'NOT INSTALLED' }}"
  loop: "{{ _verify_dnf.results }}"

- name: Install pip packages on bastion (user installation to ~/.local/bin)
  delegate_to: bastion
  when: bastion_pip_packages | default([]) | length > 0
  become: false
  ansible.builtin.pip:
    name: "{{ bastion_pip_packages }}"
    state: present
    executable: /usr/bin/pip3
  retries: 3
  delay: 10

- name: Debug - Verify pip packages installed
  delegate_to: bastion
  when: bastion_pip_packages | default([]) | length > 0
  become: false
  ansible.builtin.command: "/usr/bin/pip3 list | grep -i {{ item }}"
  loop: "{{ bastion_pip_packages }}"
  register: _verify_pip
  changed_when: false
  failed_when: false

- name: Debug - Show pip package verification
  when: bastion_pip_packages | default([]) | length > 0
  ansible.builtin.debug:
    msg: "{{ item.item }}: {{ item.stdout if item.rc == 0 else 'NOT INSTALLED' }}"
  loop: "{{ _verify_pip.results }}"

- name: Debug - Check if .local/bin exists and show contents
  delegate_to: bastion
  when: bastion_pip_packages | default([]) | length > 0
  become: false
  ansible.builtin.shell: "ls -la ~/.local/bin/ 2>&1 || echo 'Directory does not exist'"
  register: _local_bin_check
  changed_when: false

- name: Debug - Show .local/bin contents
  when: bastion_pip_packages | default([]) | length > 0
  ansible.builtin.debug:
    msg: "{{ _local_bin_check.stdout_lines }}"

- name: Run custom commands on bastion
  delegate_to: bastion
  when: bastion_custom_commands | default([]) | length > 0
  become: true
  ansible.builtin.command:
    cmd: "{{ item }}"
  loop: "{{ bastion_custom_commands }}"
  register: _bastion_command_result
  changed_when: _bastion_command_result.rc == 0
